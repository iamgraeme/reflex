<!doctype html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Screens</title>

  <!-- Preload CSS -->
  <link rel="preload" as="style" href="{{root}}css/style.css">
  <link rel="stylesheet" type="text/css" href="{{root}}css/style.css">

  <!-- Preload the JS -->
  {{!--
  <link rel="preload" as="script" href="{{root}}../js/templates.js">
  <link rel="preload" as="script" href="{{root}}../js/app.min.js"> --}}
</head>

<body>

  <main>
    {{!-- <div class="gui-title-bar">
      <div class="gui-menu-button"></div>
      <div class="gui-menu-button"></div>
      <div class="gui-menu-button"></div>
    </div> --}}
    <!-- Toolbar w/ data binding to URL and global controls-->
    <div class="toolbar" id="toolbar">
      <div>
        <input type="text" id="toolbar__url" value="http://localhost:3002" />
        <div class="url-highlighted"></div>
      </div>
      <div id="toolbar__canvas-controls">
        <div class="canvas-controls__scale">
          <span id="canvas-controls__scale" value="100%" data-bind="scale"></span> 
          {{!-- <span data-bind="scale"></span>
          --}} {{!-- <a href="#" id="canvas-controls__reset">Reset</a> --}}
          <a href="#" id="canvas-controls__fit-to-screen">Fit</a>
        </div>
      </div>
      <div>
        <a href="#" id="canvas-controls__orientation">Orientation</a>
      </div>
    </div>

    <!-- Define the resizable canvas area-->
    <div id="canvas" class="canvas">
      <div class="inner">
        <!-- Define the horizontal artbaord container-->
        <div id="artboards" class="artboards">
          <!-- Each artboard-->
          {{>artboard}} {{>artboard}} {{>artboard}}
        </div>
      </div>
    </div>

  </main>

  <script type="text/javascript">
    // NWJS specific code
    var nw;
    if (nw) {

      if (process.versions['nw-flavor']) {
        // SDK-specific code
        console.log("Webkit Version: ", process.versions['node-webkit']);
      }

      // Make the NW window object accessible
      var win = nw.Window.get();

      // On load, show the app
      win.on("loaded", function () {
        win.show();
        win.focus();

        // // Add the standard Mac shadow
        setTimeout(function () {
          win.setShadow(true);
          console.log('shadow?');
        }, 100);
      });

      // Open links in the native browser
      win.on('new-win-policy', function (frame, url, policy) {
        // do not open the window
        policy.ignore();
        // and open it in external browser
        nw.Shell.openExternal(url);
      });
    }
  </script>

  <script src="{{root}}js/app.min.js" type="text/javascript"></script>
  <script src="{{root}}js/templates.js" type="text/javascript"></script>

</body>

</html>